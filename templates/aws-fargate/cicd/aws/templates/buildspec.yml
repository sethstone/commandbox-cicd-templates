version: 0.2

env:
  parameter-store:
    DOCKER_HUB_USERNAME: @@CICDTEMPLATE_PROJECT_PREFIX@@-DOCKER_HUB_USERNAME
    DOCKER_HUB_PASSWORD: @@CICDTEMPLATE_PROJECT_PREFIX@@-DOCKER_HUB_PASSWORD

phases:
  pre_build:
    commands:
      - docker --version
      - aws --version
      # Login to both DockerHub and Amazon ECR
      - echo $DOCKER_HUB_PASSWORD | docker login --username $DOCKER_HUB_USERNAME --password-stdin
      - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      # Build image
      - echo Docker image build started on $(date)
      # Required to correctly load Dockerfile.dockerignore, but also generates a lot of debugging output
      - export DOCKER_BUILDKIT=1
      - docker image build -f cicd/docker/commandbox/Dockerfile -t $REPOSITORY_URI:$IMAGE_TAG .
      - echo Docker image build completed on $(date)
  post_build:
    commands:
      # Push image to ECR
      - echo Pushing the Docker image...
      - docker push $REPOSITORY_URI:$IMAGE_TAG
      # Create output artifacts for next stage
      - echo Create deploy stage artifacts
      - printf '{"ImageURI":"%s"}' $REPOSITORY_URI:$IMAGE_TAG > imageDetail.json
      - cp cicd/aws/templates/task-definition.json.tmpl task-definition.json
      - sed -i "s|CICDTEMPLATE_TASK_EXECUTION_ROLE_ARN|$TASKEXEC_ROLE|g" task-definition.json
      - sed -i "s|CICDTEMPLATE_AWS_REGION|$AWS_REGION|g" task-definition.json
      - cp cicd/aws/templates/appspec.yml appspec.yml
artifacts:
  files:
    - imageDetail.json
    - task-definition.json
    - appspec.yml