version: 0.2

env:
  parameter-store:
    DOCKERHUB_USERNAME: @@CICDTEMPLATE_PROJECT_PREFIX@@-DOCKERHUB_USERNAME
    DOCKERHUB_PASSWORD: @@CICDTEMPLATE_PROJECT_PREFIX@@-DOCKERHUB_PASSWORD

phases:
  pre_build:
    commands:
      - docker --version
      - aws --version
      # Login to both DockerHub and Amazon ECR
      - echo $DOCKERHUB_PASSWORD | docker login --username $DOCKERHUB_USERNAME --password-stdin
      - aws ecr get-login-password | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
      - REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${ECR_REPO_NAME}
      - IMAGE_TAG=$(echo $CODEBUILD_RESOLVED_SOURCE_VERSION | cut -c 1-7)
  build:
    commands:
      # Build Image
      - echo Docker image build started on $(date)
      # BUILDKIT var required to correctly load Dockerfile.dockerignore, but also generates a lot of debugging output
      - DOCKER_BUILDKIT=1 docker image build -f cicd/docker/commandbox/Dockerfile -t ${REPOSITORY_URI}:${IMAGE_TAG} .
      - echo Docker image build completed on $(date)
  post_build:
    commands:
      # Execute this section only if build phase succeeded
      - test "$CODEBUILD_BUILD_SUCCEEDING" = "1"
      # Push image to ECR
      - echo Pushing the Docker image...
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}